#!/bin/bash
#
#   The main body of the gci command is split off into this
#   separate script because it is necessary to run these commands
#   within an SSH call if running in a Cheyenne batch node.
#
#   Author:         Brian Vanderwende
#   Last Revised:   13:08, 24 Mar 2021
#

function verb_msg {
    if [[ $VMODE ]]; then
        echo "$1"
    fi
}

# First, make sure environment is configured for globus
verb_msg "Initializing Globus CLI environment ..."

if ! which globus &> /dev/null; then
    if [[ -n $NCAR_HOST ]]; then
        module load ncarenv python > /dev/null
        ncar_pylib > /dev/null
    else
        >&2 echo "Error: cannot find globus command in current PATH"
        exit 1
    fi
fi

# Then, make sure the user is logged in
if ! globus whoami &> /dev/null; then
    echo 'Error: login to Globus service using "globus login" before using gci'
    echo '       (access Globus CLI via NCAR Package Library in Python)'
    exit 1
fi

# Set fields we care about in commands
BFILE=
MSGDONE=false
CERTFILE=~/.$USER-globus.cert

# List of NCAR endpoints to support
declare -A EPL EPR
EPL[GLADE]="NCAR GLADE"
EPL[CAMPAIGN]="NCAR Campaign Storage"
EPL[QUASAR]="NCAR Quasar"
EPL[SHARE]="NCAR Data Sharing Service"

EPR[CAMPAIGN]=/glade/campaign
EPR[SHARE]=/glade/p/datashare
EPR[GLADE]=/glade
EPR[QUASAR]=/gpfs/gpfs0/archive

# User messages
function cert_notice {
cat << EOF
Note:  CISL endpoints are not activated and no long-lived certificate is
       available. Consider certificate activation if using commands in
       unattended workflow.

Using standard authenication with two-factor login ..."
EOF
}

# Process paths and associated endpoints
for ARG in $@; do
    EPID= EPPATH=

    if [[ $ARG == *:* ]]; then
        EPID=${ARG%:*}
        EPPATH=${ARG#*:}
    elif [[ $ARG == /* ]]; then
        EPPATH=$ARG
        
        for KEY in ${!EPR[@]}; do
            if [[ $ARG == ${EPR[$KEY]}* ]]; then
                EPID=$KEY
            fi
        done
    fi

    if [[ -z $EPID ]] && [[ $EPPATH ]]; then
        >&2 echo "Error: file system not supported ($ARG)"
        exit 1
    fi

    if [[ " ${!EPL[@]} " == *" ${EPID^^} "* ]]; then
        EPID=${EPID^^}
        verb_msg "Using endpoint ${EPL[${EPID^^}]} ..."
        
        # Complete NCAR path if relative
        if [[ $EPPATH != /* ]]; then
            EPPATH=${EPR[$EPID]}/$EPPATH
        fi
       
        EPID=$(globus endpoint search "${EPL[$EPID]}"   \
               --filter-owner-id ncar@globusid.org      \
               --jq "DATA[0].id" --format UNIX)
        
        verb_msg "Endpoint identified as $EPID"
        
        if ! globus endpoint is-activated $EPID &> /dev/null || [[ $AFORCE ]]; then
            verb_msg "Activating endpoint with $LIFETIME h lifetime"
            
            if [[ -f $CERTFILE ]]; then
                globus endpoint activate    --no-autoactivate --force   \
                                            --delegate-proxy $CERTFILE  \
                                            --proxy-lifetime $LIFETIME  \
                                            $EPID > /dev/null
            else
                [[ $MSGDONE == false ]] && cert_notice
                globus endpoint activate    --no-autoactivate --force   \
                                            --proxy-lifetime $LIFETIME  \
                                            --myproxy $EPID
            fi

            STATUS=$?

            if [[ $STATUS != 0 ]]; then
                echo -e "\nError: could not activate endpoint"
                exit 1
            fi

            MSGDONE=true
        fi
    fi
    
    if [[ $EPID ]]; then
        CMDARGS+=("$EPID:$EPPATH")
    else
        CMDARGS+=("$ARG")
    fi
done

if [[ $VMODE ]] || [[ $DEBUG ]]; then
cat << EOF
Running command from $(hostname) at $(date -Iseconds) ...

    globus ${CMDARGS[@]}

EOF
fi

if [[ -z $DEBUG ]]; then
    globus "${CMDARGS[@]}"
fi

exit $RETCODE
