#!/bin/bash
#
#   gci subcommand put
#
#   This subcommand puts data on the Campaign Storage platform
#   from GLADE via a Globus transfer. It should be called via
#   the gci command.
#
#   Author:         Brian Vanderwende
#   Last Revised:   08:55, 14 Nov 2019
#

function usage {
cat << EOF
Usage: gci put [OPTIONS] SOURCE:DESTINATION

The put subcommand copies specified files and/or directories
from GLADE to a target location on the Campaign Storage system.

Batch mode is also supported. In this mode, a text file is given
as a command line argument which contains SOURCE and DESTINATION
paths for each file to be copied to Campaign Storage. You
may still use the SOURCE and DESTINATION argument on the command
line - they will be prefixed onto each file path. Usage:

gci put --batch filelist.txt [SOURCE:DESTINATION]
EOF
}

if [[ " $@ " == *" -h"* ]]; then
    usage
    exit 0
fi

# Are we in conditional mode?
if [[ $(basename $0) == c* ]]; then
    GTARGS="-s mtime"
fi

# Cycle through command-line arguments and check on SOURCE and DEST
function check_paths {
    [[ $SPATH != /gpfs/csfs1/* ]] && [[ $SPATH != $CSPREFIX/* ]] && SPATH=$CSPREFIX/$SPATH
    [[ $GPATH != /* ]] && GPATH=$(pwd)/$GPATH
    [[ $RMODE != true ]] && [[ $SPATH == */ ]] && SPATH=$SPATH/${GPATH##*/}
}

for ARG in $@; do
    if [[ $ARG == *:* ]]; then
        GPATH=${ARG%:*} SPATH=${ARG#*:}
        
        if [[ $BMODE != true ]]; then
            if [[ ${SPATH}z == z ]] || [[ ${GPATH}z == z ]]; then
                echo "Error: missing source and/or destination path"
                exit 4
            fi

            check_paths
        fi 
    else
        GTARGS="$ARG $GTARGS"
    fi
done

# Check each item in batch mode itinerary
if [[ $BMODE == true ]]; then
    [[ ${GPATH}z != z ]] && GPREFIX=$GPATH/
    [[ ${SPATH}z != z ]] && SPREFIX=$SPATH/

    while IFS= read -r LINE; do
        DIRS=( $(sed 's/ -r//;s/ --recursive//' <<< " $LINE") )
        GPATH=${GPREFIX}${DIRS[0]}
        SPATH=${SPREFIX}${DIRS[1]}
        
        check_paths

        if [[ " $LINE" == *" -r"* ]] || [[ " $LINE" == *" --recursive"* ]]; then
            echo "-r $GPATH $SPATH" >> $BFILE
        else
            echo "$GPATH $SPATH" >> $BFILE
        fi
    done < $BTMP

    GPATH= SPATH=
fi

# Add endpoint IDs to SOURCE and DEST
if [[ ${GPATH}z == z ]]; then
    SOURCE=$EPGLADE
else
    SOURCE=$EPGLADE:$GPATH
fi

if [[ ${SPATH}z == z ]]; then
    DESTINATION=$EPSTORE
else
    DESTINATION=$EPSTORE:$SPATH
fi

# Now call globus transfer
cat << EOF
Running command ...

globus transfer $GTARGS
    $SOURCE
    $DESTINATION

EOF

[[ $DEBUG == true ]] && exit 0
source $GCIBIN/transfer "$GTARGS" $SOURCE $DESTINATION
$GCIBIN/task-wait $TID
