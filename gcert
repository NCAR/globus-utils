#!/bin/bash
#
#   gcert - generate Globus certificate from InCommon cert file
#
#   Author:          Brian Vanderwende
#   Last Revised:   00:36, 23 Mar 2021
#

function usage {
cat << EOF
Usage: $0 CERTIFICATE

Input the path to the InCommon certificate file (p12 extension).
EOF
}

# List of NCAR endpoints to support
declare -A EPL
EPL[CAMPAIGN]="NCAR Campaign Storage"
EPL[QUASAR]="NCAR Quasar"
EPL[AWS]="NCAR AWS S3"
EPL[HPSS]="NCAR HPSS"
EPL[SHARE]="NCAR Data Sharing Service"
EPL[GLADE]="NCAR GLADE"

function cert_usage {
    echo -e "\nActivating endpoints using certificate ..."
   
    if ! globus whoami &> /dev/null; then
        echo "You are not currently logged into the Globus service"
        echo "Running 'globus login' ..."
        globus login
    fi
    
    for EP in ${!EPL[@]}; do
        echo -n "  -> ${EPL[$EP]} - "
        EPID=$(globus endpoint search "${EPL[$EP]}" --filter-owner-id ncar@globusid.org --jq "DATA[0].id" --format UNIX)
        globus endpoint activate --force --no-autoactivate --delegate-proxy ~/.${USER}-globus.cert $EPID > /dev/null

        if [[ $? == 0 ]]; then
            echo "success"
        else
            echo "failed to activate"
        fi
    done
}

if [[ " $@ " == *" -h "* ]]; then
    usage
    exit 0
fi

if [[ $NCAR_HOST == cheyenne ]] && [[ -n $PBS_JOBID ]]; then
    >&2 echo "Error:   gcert requires an outbound connection to the Globus auth server"
    >&2 echo "         and therefore cannot be run from Cheyenne batch jobs"

    exit 1
fi
    
if [[ -n $NCAR_HOST ]]; then
    module load ncarenv python > /dev/null
    ncar_pylib > /dev/null
elif ! which globus >& /dev/null; then
    >&2 echo "Error:   the globus command must be in your PATH when running this script"
    exit 1
fi
    
    
if [[ -f ~/.${USER}-globus.cert ]]; then
cat << EOF
Note:    a Globus certificate already exists in your home directory. Please
         delete this file before running this script if you wish to create
         a new certificate.

         ${HOME}/.${USER}-globus.cert
EOF

    cert_usage
    exit 2
else
    if [[ ! -f $1 ]]; then
        usage
        exit 1
    fi
fi

# Convert PFX file to PEM (try PIN-less first, then ask)
openssl pkcs12 -in $1 -passout pass:tpass -passin pass: > ${USER}.pem 2> /dev/null

if [[ $? == 1 ]]; then
    echo -e "InCommon certificate appears to be PIN-protected. Please enter your PIN below.\n"
    openssl pkcs12 -in $1 -passout pass:tpass > ${USER}.pem || exit 1
fi

# Remove passphrase from private key
openssl rsa -in ${USER}.pem -out ${USER}-rsa.pem -passin pass:tpass

# Get necessary certificate for globus
awk '/-----BEGIN C/{p=1}/-----END C/{print;exit} p' ${USER}.pem > ~/.${USER}-globus.cert

# Append the RSA key onto the cert file
cat ${USER}-rsa.pem >> ~/.${USER}-globus.cert

# Remove temporary files for security
rm ${USER}.pem ${USER}-rsa.pem

# Set strict permissions on cert file for security
chmod 400 ~/.${USER}-globus.cert

cat << EOF


Globus certificate created in ${HOME}!

To ensure the security of your data, do not share the certificate.
Deleting the following input credential file is strongly advised:

    $1
EOF

cert_usage
