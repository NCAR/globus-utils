#!/bin/bash
#
#   gci - Globus Campaign Storage interface
#
#   This command redirects actions to other helper commands
#   that perform Globus operations between GLADE and the
#   Campaign Storage file systems
#
#   Author:         Brian Vanderwende
#   Last Revised:   17:01, 09 Sep 2019
#

unset BFILE

function clean_up {
    CMDSTAT=$?
    rm -f $BFILE
    exit $CMDSTAT
}

# Exit upon signal (so we don't resubmit SSH command)
trap clean_up SIGHUP SIGINT SIGQUIT SIGTERM

# Do we need help?
function usage {
cat << EOF
Usage: $0 [OPTIONS] COMMAND

This utility provides a convenient interface for transferring files between
the CISL endpoints "NCAR GLADE" and "NCAR Campaign Storage". An attempt will
be made to auto-authenticate using a long-lived certificate file. All requests
utilize the Globus CLI to schedule and conduct transfers.

Available commands:
    cget    conditionally copy files from campaign Storage to GLADE if newer
    cput    conditionally copy files from GLADE to Campaign Storage if newer
    get     copy files from campaign Storage to GLADE
    put     copy files from GLADE to Campaign Storage
    mkdir   create a new directory on Campaign Storage
EOF
}

while [[ $# -gt 0 ]]; do
    KEY="$1"
    case $KEY in
        -h|--help)
            usage
            exit 0
            ;;
        -b|--background)
            export BGCMD=true
            ;;
        -d|--debug)
            export DEBUG=true
            ;;
        *)
            break
    esac
    shift
done

# If in batch mode, store stdin in a file
if [[ " $@ " == *" --batch "* ]]; then
    MYTMP=${TMPDIR:-fakepath}
    export BTMP=/glade/scratch/$USER/globtmp.$$

    if [[ $(readlink -f /dev/stdin) =~ /(glade|tmp|$MYTMP)/* ]] ; then
        cat > $BTMP
    fi
fi

# Call main script locally or on login node
export GCIBIN=$(cd "$(dirname "$0")"; pwd)/bin

if [[ $(hostname) == r* ]]; then
    SNODE=$(shuf -i 1-6 -n 1)
    LN=$SNODE SSHSTAT=255
    RCMD="export BGCMD=$BGCMD DEBUG=$DEBUG BTMP=$BTMP TMPDIR=$TMPDIR GCIBIN=$GCIBIN; cd $(pwd); $GCIBIN/main $@"

    while [[ $SSHSTAT -eq 255 ]]; do
        ssh cheyenne${LN}.ib0 "/bin/bash -c \"$RCMD\""
        SSHSTAT=$? LN=$((LN + 1))

        if [[ $LN -gt 6 ]]; then
            LN=1
        elif [[ $LN -eq $SNODE ]]; then
            break
        fi
    done

    if [[ $SSHSTAT -eq 255 ]]; then
        echo "Error: could not connect to a login node; transfer aborted"
        exit 255
    fi

    exit $SSHSTAT
else
    $GCIBIN/main $@
fi

clean_up
